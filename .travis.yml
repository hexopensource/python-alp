language: python
python: '3.5'
sudo: required
dist: trusty
services:
  - mongodb
  - docker
env:
  global:
    - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
    - SEGFAULT_SIGNALS=all
    - TEST_MODE=ON
  matrix:
    - TOXENV=check
    - TOXENV=docs

    - TOXENV=py27,coveralls,codecov
    - TOXENV=py34,coveralls,codecov
    - TOXENV=py35,coveralls,codecov
addons:
  code_climate:
      repo_token: dfe5865d21322900ba6972d30da44e2859d3533fead6c26cdf217ebb540000ce
apt:
  packages:
    - libhdf5-dev
before_install:
  - echo $TRAVIS_PULL_REQUEST_BRANCH
  - echo $TRAVIS_BRANCH
  - SUFFIX=''
  - if [[ "$TRAVIS_BRANCH" =~ "X*devX*" ]]; then SUFFIX=dev; fi
  - if [[ "$TRAVIS_PULL_REQUEST_BRANCH" =~ "X*devX*" ]]; then SUFFIX=dev; fi
  - echo $SUFFIX
  - sudo mkdir /parameters_h5
  - sudo chmod 777 /parameters_h5
  - sudo mkdir /data_generator
  - sudo chmod 777 /data_generator
  - sudo rabbitmqctl stop
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 1397BC53640DB551
  - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
  - echo "deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list
  - sudo apt-get update
  - sudo apt-get install -y libhdf5-dev
  - sudo apt-get install -y mongodb-org
  - python --version
  - uname -a
  - lsb_release -a
  - if [[ ("$TOXENV" == "py27,coveralls,codecov") ]]; then docker run --name mongo_results -v /opt/data/mongo_data/results:/data/db -p 27018:27017 -d --restart=always mongo; docker run --name mongo_models -v /opt/data/mongo_data/models:/data/db -d --restart=always mongo; docker run -d -v /opt/data/rabbitmq/dev/log:/dev/log -v /opt/data/rabbitmq:/var/lib/rabbitmq  --name=rabbitmq_sched -p 8080:15672 -p 5672:5672 --restart=always rabbitmq:3-management; docker run -d -v /parameters_h5:/parameters_h5 -v /opt/data/r2dbh5:/r2dbh5 -v /data_generator:/data_generator -e WORKER=TRUE --link=mongo_results:mongo_r --link=mongo_models:mongo_m --link=rabbitmq_sched:rabbitmq --name=keras_worker --restart=always tboquet/travis_worker_${SUFFIX}k:latest; docker run -d -v /parameters_h5:/parameters_h5 -v /opt/data/r2dbh5:/r2dbh5 -v /data_generator:/data_generator -e WORKER=TRUE --link=mongo_results:mongo_r --link=mongo_models:mongo_m --link=rabbitmq_sched:rabbitmq --name=sklearn_worker --restart=always tboquet/travis_worker_${SUFFIX}sk:latest;fi
  - if [[ ("$TOXENV" == "py34,coveralls,codecov" || "$TOXENV" == "py35,coveralls,codecov") ]]; then docker run --name mongo_results -v /opt/data/mongo_data/results:/data/db -p 27018:27017 -d --restart=always mongo; docker run --name mongo_models -v /opt/data/mongo_data/models:/data/db -d --restart=always mongo; docker run -d -v /opt/data/rabbitmq/dev/log:/dev/log -v /opt/data/rabbitmq:/var/lib/rabbitmq  --name=rabbitmq_sched -p 8080:15672 -p 5672:5672 --restart=always rabbitmq:3-management; docker run -d -v /parameters_h5:/parameters_h5 -v /opt/data/r2dbh5:/r2dbh5 -v /data_generator:/data_generator -e WORKER=TRUE --link=mongo_results:mongo_r --link=mongo_models:mongo_m --link=rabbitmq_sched:rabbitmq --name=keras_worker --restart=always tboquet/travis_worker_${SUFFIX}k:py3; docker run -d -v /parameters_h5:/parameters_h5 -v /opt/data/r2dbh5:/r2dbh5 -v /data_generator:/data_generator -e WORKER=TRUE --link=mongo_results:mongo_r --link=mongo_models:mongo_m --link=rabbitmq_sched:rabbitmq --name=sklearn_worker --restart=always tboquet/travis_worker_${SUFFIX}sk:py3;fi
  - docker ps
  - sleep 3
  - if [[ ("$TOXENV" == "py27,coveralls,codecov" || "$TOXENV" == "py34,coveralls,codecov" || "$TOXENV" == "py35,coveralls,codecov") ]]; then docker logs sklearn_worker;docker logs keras_worker;fi
install:
  - pip install tox
  - pip install --upgrade pip
  - virtualenv --version
  - easy_install --version
  - pip --version
  - tox --version
script:
  - tox -v
after_failure:
  - more .tox/log/* | cat
  - more .tox/*/log/* | cat
  - docker logs sklearn_worker
  - docker logs keras_worker
before_cache:
  - rm -rf $HOME/.cache/pip/log
cache:
  directories:
    - $HOME/.cache/pip
notifications:
  email:
    on_success: never
    on_failure: always
